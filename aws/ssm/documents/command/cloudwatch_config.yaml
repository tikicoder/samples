---
schemaVersion: "2.2"
description: Configure Cloudwatch Agent Config
parameters:
  reset_config:
    type: "Boolean"
    description: "If true this will delete all other configs"
    default: false
  config_name:
    type: "String"
    description: "The name of the config to use."
    default: "secondary"
  LinuxCloudWatchConfig_base64:
    type: "String"
    description: "Linux CloudWatch Config converted to base64"
    default: "eyJhZ2VudCI6eyJtZXRyaWNzX2NvbGxlY3Rpb25faW50ZXJ2YWwiOjYwLCJvbWl0X2hvc3RuYW1lIjpmYWxzZSwiYXdzX3Nka19sb2dfbGV2ZWwiOiJMb2dEZWJ1ZyIsImxvZ2ZpbGUiOiIvb3B0L2F3cy9hbWF6b24tY2xvdWR3YXRjaC1hZ2VudC9sb2dzL2FtYXpvbi1jbG91ZHdhdGNoLWFnZW50LmxvZyIsInJ1bl9hc191c2VyIjoicm9vdCJ9LCJtZXRyaWNzIjp7Im5hbWVzcGFjZSI6IkNXRGV0YWlsZWRNZXRyaWNzIiwiYWdncmVnYXRpb25fZGltZW5zaW9ucyI6W1siaG9zdG5hbWUiXSxbIkluc3RhbmNlSWQiXSxbIkluc3RhbmNlVHlwZSJdLFsiSW5zdGFuY2VJZCIsIkluc3RhbmNlVHlwZSJdLFsiSW5zdGFuY2VJZCIsImhvc3RuYW1lIl0sWyJJbnN0YW5jZVR5cGUiLCJob3N0bmFtZSJdLFsiQXV0b1NjYWxpbmdHcm91cE5hbWUiLCJJbWFnZUlkIiwiSW5zdGFuY2VJZCJdLFsiQXV0b1NjYWxpbmdHcm91cE5hbWUiXSxbXV0sImZvcmNlX2ZsdXNoX2ludGVydmFsIjo5MCwibWV0cmljc19jb2xsZWN0ZWQiOnsiY3B1Ijp7InJlc291cmNlcyI6WyIqIl0sImFwcGVuZF9kaW1lbnNpb25zIjp7IkF1dG9TY2FsaW5nR3JvdXBOYW1lIjoiJHthd3M6QXV0b1NjYWxpbmdHcm91cE5hbWV9IiwiSW1hZ2VJZCI6IiR7YXdzOkltYWdlSWR9IiwiSW5zdGFuY2VJZCI6IiR7YXdzOkluc3RhbmNlSWR9IiwiSW5zdGFuY2VUeXBlIjoiJHthd3M6SW5zdGFuY2VUeXBlfSJ9LCJtZWFzdXJlbWVudCI6WyJjcHVfdXNhZ2VfaWRsZSIsImNwdV91c2FnZV9pb3dhaXQiLCJjcHVfdXNhZ2VfdXNlciIsImNwdV91c2FnZV9zeXN0ZW0iXSwidG90YWxjcHUiOnRydWV9LCJkaXNrIjp7InJlc291cmNlcyI6WyIqIl0sImFwcGVuZF9kaW1lbnNpb25zIjp7IkF1dG9TY2FsaW5nR3JvdXBOYW1lIjoiJHthd3M6QXV0b1NjYWxpbmdHcm91cE5hbWV9IiwiSW1hZ2VJZCI6IiR7YXdzOkltYWdlSWR9IiwiSW5zdGFuY2VJZCI6IiR7YXdzOkluc3RhbmNlSWR9IiwiSW5zdGFuY2VUeXBlIjoiJHthd3M6SW5zdGFuY2VUeXBlfSJ9LCJtZWFzdXJlbWVudCI6W3sibmFtZSI6ImRpc2tfZnJlZSIsInVuaXQiOiJHaWdhYnl0ZXMifSx7Im5hbWUiOiJkaXNrX3RvdGFsIiwidW5pdCI6IkdpZ2FieXRlcyJ9LHsibmFtZSI6ImRpc2tfdXNlZCIsInVuaXQiOiJHaWdhYnl0ZXMifSwiZGlza191c2VkX3BlcmNlbnQiLCJkaXNrX2lub2Rlc19mcmVlIiwiZGlza19pbm9kZXNfdG90YWwiXX0sImRpc2tpbyI6eyJyZXNvdXJjZXMiOlsiKiJdLCJhcHBlbmRfZGltZW5zaW9ucyI6eyJBdXRvU2NhbGluZ0dyb3VwTmFtZSI6IiR7YXdzOkF1dG9TY2FsaW5nR3JvdXBOYW1lfSIsIkltYWdlSWQiOiIke2F3czpJbWFnZUlkfSIsIkluc3RhbmNlSWQiOiIke2F3czpJbnN0YW5jZUlkfSIsIkluc3RhbmNlVHlwZSI6IiR7YXdzOkluc3RhbmNlVHlwZX0ifSwibWVhc3VyZW1lbnQiOlsiZGlza2lvX2lvcHNfaW5fcHJvZ3Jlc3MiLCJkaXNraW9faW9fdGltZSIsImRpc2tpb193cml0ZV9ieXRlcyIsImRpc2tpb19yZWFkX2J5dGVzIiwiZGlza2lvX3dyaXRlcyIsImRpc2tpb19yZWFkcyJdfSwic3dhcCI6eyJyZXNvdXJjZXMiOlsiKiJdLCJhcHBlbmRfZGltZW5zaW9ucyI6eyJBdXRvU2NhbGluZ0dyb3VwTmFtZSI6IiR7YXdzOkF1dG9TY2FsaW5nR3JvdXBOYW1lfSIsIkltYWdlSWQiOiIke2F3czpJbWFnZUlkfSIsIkluc3RhbmNlSWQiOiIke2F3czpJbnN0YW5jZUlkfSIsIkluc3RhbmNlVHlwZSI6IiR7YXdzOkluc3RhbmNlVHlwZX0ifSwibWVhc3VyZW1lbnQiOlt7Im5hbWUiOiJzd2FwX3VzZWQiLCJ1bml0IjoiR2lnYWJ5dGVzIn0seyJuYW1lIjoic3dhcF9mcmVlIiwidW5pdCI6IkdpZ2FieXRlcyJ9LCJzd2FwX3VzZWRfcGVyY2VudCJdfSwibWVtIjp7InJlc291cmNlcyI6WyIqIl0sImFwcGVuZF9kaW1lbnNpb25zIjp7IkF1dG9TY2FsaW5nR3JvdXBOYW1lIjoiJHthd3M6QXV0b1NjYWxpbmdHcm91cE5hbWV9IiwiSW1hZ2VJZCI6IiR7YXdzOkltYWdlSWR9IiwiSW5zdGFuY2VJZCI6IiR7YXdzOkluc3RhbmNlSWR9IiwiSW5zdGFuY2VUeXBlIjoiJHthd3M6SW5zdGFuY2VUeXBlfSJ9LCJtZWFzdXJlbWVudCI6W3sibmFtZSI6Im1lbV9hY3RpdmUiLCJ1bml0IjoiR2lnYWJ5dGVzIn0seyJuYW1lIjoibWVtX2F2YWlsYWJsZSIsInVuaXQiOiJHaWdhYnl0ZXMifSx7Im5hbWUiOiJtZW1fYnVmZmVyZWQiLCJ1bml0IjoiR2lnYWJ5dGVzIn0seyJuYW1lIjoibWVtX2NhY2hlZCIsInVuaXQiOiJHaWdhYnl0ZXMifSx7Im5hbWUiOiJtZW1fZnJlZSIsInVuaXQiOiJHaWdhYnl0ZXMifSx7Im5hbWUiOiJtZW1fdG90YWwiLCJ1bml0IjoiR2lnYWJ5dGVzIn0seyJuYW1lIjoibWVtX3VzZWQiLCJ1bml0IjoiR2lnYWJ5dGVzIn0sIm1lbV9hdmFpbGFibGVfcGVyY2VudCIsIm1lbV91c2VkX3BlcmNlbnQiXX0sIm5ldCI6eyJyZXNvdXJjZXMiOlsiKiJdLCJhcHBlbmRfZGltZW5zaW9ucyI6eyJBdXRvU2NhbGluZ0dyb3VwTmFtZSI6IiR7YXdzOkF1dG9TY2FsaW5nR3JvdXBOYW1lfSIsIkltYWdlSWQiOiIke2F3czpJbWFnZUlkfSIsIkluc3RhbmNlSWQiOiIke2F3czpJbnN0YW5jZUlkfSIsIkluc3RhbmNlVHlwZSI6IiR7YXdzOkluc3RhbmNlVHlwZX0ifSwibWVhc3VyZW1lbnQiOlsibmV0X2J5dGVzX3NlbnQiLCJuZXRfYnl0ZXNfcmVjdiIsIm5ldF9kcm9wX2luIiwibmV0X2Ryb3Bfb3V0IiwibmV0X2Vycl9pbiIsIm5ldF9lcnJfb3V0IiwibmV0X3BhY2tldHNfc2VudCIsIm5ldF9wYWNrZXRzX3JlY3YiXX0sIm5ldHN0YXQiOnsicmVzb3VyY2VzIjpbIioiXSwiYXBwZW5kX2RpbWVuc2lvbnMiOnsiQXV0b1NjYWxpbmdHcm91cE5hbWUiOiIke2F3czpBdXRvU2NhbGluZ0dyb3VwTmFtZX0iLCJJbWFnZUlkIjoiJHthd3M6SW1hZ2VJZH0iLCJJbnN0YW5jZUlkIjoiJHthd3M6SW5zdGFuY2VJZH0iLCJJbnN0YW5jZVR5cGUiOiIke2F3czpJbnN0YW5jZVR5cGV9In0sIm1lYXN1cmVtZW50IjpbIm5ldHN0YXRfdGNwX2VzdGFibGlzaGVkIiwibmV0c3RhdF90Y3BfdGltZV93YWl0IiwibmV0c3RhdF90Y3Bfc3luX3NlbnQiLCJuZXRzdGF0X3RjcF9jbG9zZSIsIm5ldHN0YXRfdGNwX2Nsb3NlX3dhaXQiLCJuZXRzdGF0X3RjcF9jbG9zaW5nIl19LCJwcm9jZXNzZXMiOnsicmVzb3VyY2VzIjpbIioiXSwiYXBwZW5kX2RpbWVuc2lvbnMiOnsiQXV0b1NjYWxpbmdHcm91cE5hbWUiOiIke2F3czpBdXRvU2NhbGluZ0dyb3VwTmFtZX0iLCJJbWFnZUlkIjoiJHthd3M6SW1hZ2VJZH0iLCJJbnN0YW5jZUlkIjoiJHthd3M6SW5zdGFuY2VJZH0iLCJJbnN0YW5jZVR5cGUiOiIke2F3czpJbnN0YW5jZVR5cGV9In0sIm1lYXN1cmVtZW50IjpbInByb2Nlc3Nlc19ydW5uaW5nIiwicHJvY2Vzc2VzX3NsZWVwaW5nIiwicHJvY2Vzc2VzX2RlYWQiLCJwcm9jZXNzZXNfaWRsZSIsInByb2Nlc3Nlc190b3RhbCIsInByb2Nlc3Nlc190b3RhbF90aHJlYWRzIiwicHJvY2Vzc2VzX3pvbWJpZXMiXX19fSwibG9ncyI6eyJsb2dfc3RyZWFtX25hbWUiOiJsb2ctQ1dEZXRhaWxlZE1ldHJpY3MiLCJmb3JjZV9mbHVzaF9pbnRlcnZhbCI6OTAsImxvZ3NfY29sbGVjdGVkIjp7ImZpbGVzIjp7ImNvbGxlY3RfbGlzdCI6W3siZmlsZV9wYXRoIjoiL29wdC9hd3MvYW1hem9uLWNsb3Vkd2F0Y2gtYWdlbnQvbG9ncy9hbWF6b24tY2xvdWR3YXRjaC1hZ2VudC5sb2ciLCJsb2dfZ3JvdXBfbmFtZSI6ImFtYXpvbi1jbG91ZHdhdGNoLWFnZW50LmxvZyIsImxvZ19zdHJlYW1fbmFtZSI6ImxvZy1DV0RldGFpbGVkTWV0cmljcy17aW5zdGFuY2VfaWR9LXtob3N0bmFtZX0tY3dhZ2VudCIsInRpbWV6b25lIjoiVVRDIiwidGltZXN0YW1wX2Zvcm1hdCI6IiVZLSVtLSVkVCVIOiVNOiVTLiVmJXoiLCJhdXRvX3JlbW92YWwiOnRydWUsInJldGVudGlvbl9pbl9kYXlzIjoxODB9LHsiZmlsZV9wYXRoIjoiL3Zhci9sb2cvc3lzdGVtLmxvZyoiLCJsb2dfZ3JvdXBfbmFtZSI6InN5c3RlbS5sb2ciLCJsb2dfc3RyZWFtX25hbWUiOiJsb2ctQ1dEZXRhaWxlZE1ldHJpY3Mte2luc3RhbmNlX2lkfS17aG9zdG5hbWV9LXN5c3RlbSIsInRpbWV6b25lIjoiVVRDIiwidGltZXN0YW1wX2Zvcm1hdCI6IiVZLSVtLSVkVCVIOiVNOiVTLiVmJXoiLCJhdXRvX3JlbW92YWwiOnRydWUsInJldGVudGlvbl9pbl9kYXlzIjoxODB9XX19fX0="
  WinuxCloudWatchConfig_base64:
    type: "String"
    description: "Windows CloudWatch Config converted to base64"
    default: "eyJhZ2VudCI6eyJtZXRyaWNzX2NvbGxlY3Rpb25faW50ZXJ2YWwiOjYwLCJvbWl0X2hvc3RuYW1lIjpmYWxzZSwiYXdzX3Nka19sb2dfbGV2ZWwiOiJMb2dEZWJ1ZyIsImxvZ2ZpbGUiOiJjOlxcUHJvZ3JhbURhdGFcXEFtYXpvblxcQW1hem9uQ2xvdWRXYXRjaEFnZW50XFxMb2dzXFxhbWF6b24tY2xvdWR3YXRjaC1hZ2VudC5sb2cifSwibWV0cmljcyI6eyJuYW1lc3BhY2UiOiJDV0RldGFpbGVkTWV0cmljcyIsImFnZ3JlZ2F0aW9uX2RpbWVuc2lvbnMiOltbImhvc3RuYW1lIl0sWyJJbnN0YW5jZUlkIl0sWyJJbnN0YW5jZVR5cGUiXSxbIkluc3RhbmNlSWQiLCJJbnN0YW5jZVR5cGUiXSxbIkluc3RhbmNlSWQiLCJob3N0bmFtZSJdLFsiSW5zdGFuY2VUeXBlIiwiaG9zdG5hbWUiXSxbIkF1dG9TY2FsaW5nR3JvdXBOYW1lIiwiSW1hZ2VJZCIsIkluc3RhbmNlSWQiXSxbIkF1dG9TY2FsaW5nR3JvdXBOYW1lIl1dLCJmb3JjZV9mbHVzaF9pbnRlcnZhbCI6OTAsIm1ldHJpY3NfY29sbGVjdGVkIjp7IkxvZ2ljYWxEaXNrIjp7InJlc291cmNlcyI6WyIqIl0sImFwcGVuZF9kaW1lbnNpb25zIjp7IkF1dG9TY2FsaW5nR3JvdXBOYW1lIjoiJHthd3M6QXV0b1NjYWxpbmdHcm91cE5hbWV9IiwiSW1hZ2VJZCI6IiR7YXdzOkltYWdlSWR9IiwiSW5zdGFuY2VJZCI6IiR7YXdzOkluc3RhbmNlSWR9IiwiSW5zdGFuY2VUeXBlIjoiJHthd3M6SW5zdGFuY2VUeXBlfSJ9LCJtZWFzdXJlbWVudCI6W3sibmFtZSI6IiUgRnJlZSBTcGFjZSIsInJlbmFtZSI6ImRpc2tfZnJlZV9wZXJjZW50IiwidW5pdCI6IlBlcmNlbnQifSx7Im5hbWUiOiIlIFVzZWQgU3BhY2UiLCJyZW5hbWUiOiJkaXNrX3VzZWRfcGVyY2VudCIsInVuaXQiOiJQZXJjZW50In0seyJuYW1lIjoiRnJlZSBNZWdhYnl0ZXMiLCJyZW5hbWUiOiJkaXNrX2ZyZWUiLCJ1bml0IjoiTWVnYWJ5dGVzIn0seyJuYW1lIjoiJSBJZGxlIFRpbWUiLCJyZW5hbWUiOiJkaXNrX3VzYWdlX2lkbGUiLCJ1bml0IjoiUGVyY2VudCJ9LHsibmFtZSI6IiUgRGlzayBSZWFkIFRpbWUiLCJyZW5hbWUiOiJkaXNrX3VzYWdlX3JlYWQiLCJ1bml0IjoiUGVyY2VudCJ9LHsibmFtZSI6IiUgRGlzayBXcml0ZSBUaW1lIiwicmVuYW1lIjoiZGlza191c2FnZV93cml0ZSIsInVuaXQiOiJQZXJjZW50In1dfSwiTWVtb3J5Ijp7InJlc291cmNlcyI6WyIqIl0sImFwcGVuZF9kaW1lbnNpb25zIjp7IkF1dG9TY2FsaW5nR3JvdXBOYW1lIjoiJHthd3M6QXV0b1NjYWxpbmdHcm91cE5hbWV9IiwiSW1hZ2VJZCI6IiR7YXdzOkltYWdlSWR9IiwiSW5zdGFuY2VJZCI6IiR7YXdzOkluc3RhbmNlSWR9IiwiSW5zdGFuY2VUeXBlIjoiJHthd3M6SW5zdGFuY2VUeXBlfSJ9LCJtZWFzdXJlbWVudCI6W3sibmFtZSI6IiUgQXZhaWxhYmxlIFN3YXAgU3BhY2UiLCJyZW5hbWUiOiJzd2FwX2ZyZWVfcGVyY2VudCIsInVuaXQiOiJQZXJjZW50In0seyJuYW1lIjoiJSBVc2VkIFN3YXAgU3BhY2UiLCJyZW5hbWUiOiJzd2FwX3VzZWRfcGVyY2VudCIsInVuaXQiOiJQZXJjZW50In0seyJuYW1lIjoiQXZhaWxhYmxlIE1CeXRlcyBTd2FwIiwicmVuYW1lIjoic3dhcF9mcmVlIiwidW5pdCI6Ik1lZ2FieXRlcyJ9LHsibmFtZSI6IiUgQXZhaWxhYmxlIE1lbW9yeSIsInJlbmFtZSI6Im1lbV9hdmFpbGFibGVfcGVyY2VudCIsInVuaXQiOiJQZXJjZW50In0seyJuYW1lIjoiJSBVc2VkIE1lbW9yeSIsInJlbmFtZSI6Im1lbV91c2VkX3BlcmNlbnQiLCJ1bml0IjoiUGVyY2VudCJ9LHsibmFtZSI6IkF2YWlsYWJsZSBNQnl0ZXMgTWVtb3J5IiwicmVuYW1lIjoibWVtX2F2YWlsYWJsZSIsInVuaXQiOiJNZWdhYnl0ZXMifSx7Im5hbWUiOiJQYWdlcy9zZWMiLCJyZW5hbWUiOiJwYWdlc19zZWNvbmQifV19LCJOZXR3b3JrIEludGVyZmFjZSI6eyJyZXNvdXJjZXMiOlsiKiJdLCJhcHBlbmRfZGltZW5zaW9ucyI6eyJBdXRvU2NhbGluZ0dyb3VwTmFtZSI6IiR7YXdzOkF1dG9TY2FsaW5nR3JvdXBOYW1lfSIsIkltYWdlSWQiOiIke2F3czpJbWFnZUlkfSIsIkluc3RhbmNlSWQiOiIke2F3czpJbnN0YW5jZUlkfSIsIkluc3RhbmNlVHlwZSI6IiR7YXdzOkluc3RhbmNlVHlwZX0ifSwibWVhc3VyZW1lbnQiOlt7Im5hbWUiOiJUb3RhbCBCeXRlcyBUcmFuc21pdHRlZCIsInJlbmFtZSI6Im5ldF9ieXRlc19zZW50IiwidW5pdCI6IkJ5dGVzIn0seyJuYW1lIjoiVG90YWwgQnl0ZXMgUmVjZWl2ZWQiLCJyZW5hbWUiOiJuZXRfYnl0ZXNfcmVjdiIsInVuaXQiOiJCeXRlcyJ9LHsibmFtZSI6IlRvdGFsIFJ4IEVycm9ycyIsInJlbmFtZSI6Im5ldF9lcnJfaW4ifSx7Im5hbWUiOiJUb3RhbCBUeCBFcnJvcnMiLCJyZW5hbWUiOiJuZXRfZXJyX291dCJ9LHsibmFtZSI6IlRvdGFsIFBhY2tldHMgVHJhbnNtaXR0ZWQiLCJyZW5hbWUiOiJuZXRfcGFja2V0c19zZW50In0seyJuYW1lIjoiVG90YWwgUGFja2V0cyBSZWNlaXZlZCIsInJlbmFtZSI6Im5ldF9wYWNrZXRzX3JlY3YifV19LCJQYWdpbmcgRmlsZSI6eyJtZWFzdXJlbWVudCI6WyIlIFVzYWdlIl0sIm1ldHJpY3NfY29sbGVjdGlvbl9pbnRlcnZhbCI6NjAsInJlc291cmNlcyI6WyIqIl19LCJQaHlzaWNhbERpc2siOnsibWVhc3VyZW1lbnQiOlsiJSBEaXNrIFRpbWUiLCJEaXNrIFdyaXRlIEJ5dGVzL3NlYyIsIkRpc2sgUmVhZCBCeXRlcy9zZWMiLCJEaXNrIFdyaXRlcy9zZWMiLCJEaXNrIFJlYWRzL3NlYyJdLCJtZXRyaWNzX2NvbGxlY3Rpb25faW50ZXJ2YWwiOjYwLCJyZXNvdXJjZXMiOlsiKiJdfSwiUHJvY2Vzc29yIjp7InJlc291cmNlcyI6WyIqIl0sImFwcGVuZF9kaW1lbnNpb25zIjp7IkF1dG9TY2FsaW5nR3JvdXBOYW1lIjoiJHthd3M6QXV0b1NjYWxpbmdHcm91cE5hbWV9IiwiSW1hZ2VJZCI6IiR7YXdzOkltYWdlSWR9IiwiSW5zdGFuY2VJZCI6IiR7YXdzOkluc3RhbmNlSWR9IiwiSW5zdGFuY2VUeXBlIjoiJHthd3M6SW5zdGFuY2VUeXBlfSJ9LCJtZWFzdXJlbWVudCI6W3sibmFtZSI6IiUgSWRsZSBUaW1lIiwicmVuYW1lIjoiY3B1X3VzYWdlX2lkbGUiLCJ1bml0IjoiUGVyY2VudCJ9LHsibmFtZSI6IiUgSW50ZXJydXB0IFRpbWUiLCJyZW5hbWUiOiJjcHVfdXNhZ2VfaWRsZSIsInVuaXQiOiJQZXJjZW50In0seyJuYW1lIjoiJSBVc2VyIFRpbWUiLCJyZW5hbWUiOiJjcHVfdXNhZ2VfdXNlciIsInVuaXQiOiJQZXJjZW50In0seyJuYW1lIjoiJSBQcm9jZXNzb3IgVGltZSIsInJlbmFtZSI6ImNwdV91c2FnZV9zeXN0ZW0iLCJ1bml0IjoiUGVyY2VudCJ9XX0sIlN5c3RlbSI6eyJyZXNvdXJjZXMiOlsiKiJdLCJhcHBlbmRfZGltZW5zaW9ucyI6eyJBdXRvU2NhbGluZ0dyb3VwTmFtZSI6IiR7YXdzOkF1dG9TY2FsaW5nR3JvdXBOYW1lfSIsIkltYWdlSWQiOiIke2F3czpJbWFnZUlkfSIsIkluc3RhbmNlSWQiOiIke2F3czpJbnN0YW5jZUlkfSIsIkluc3RhbmNlVHlwZSI6IiR7YXdzOkluc3RhbmNlVHlwZX0ifSwibWVhc3VyZW1lbnQiOlt7Im5hbWUiOiJGcmVlIFBoeXNpY2FsIE1lbW9yeSIsInJlbmFtZSI6Im1lbV9hdmFpbGFibGUiLCJ1bml0IjoiR2lnYWJ5dGVzIn0seyJuYW1lIjoiRnJlZSBWaXJ0dWFsIE1lbW9yeSIsInJlbmFtZSI6InZtZW1fYXZhaWxhYmxlIiwidW5pdCI6IkdpZ2FieXRlcyJ9LHsibmFtZSI6IlByb2Nlc3NlcyIsInJlbmFtZSI6InN5c3RlbV9wcm9jZXNzZXMifSx7Im5hbWUiOiJVcHRpbWUiLCJyZW5hbWUiOiJzeXN0ZW1fdXB0aW1lIn1dfSwiVENQdjQiOnsibWVhc3VyZW1lbnQiOlsiQ29ubmVjdGlvbnMgRXN0YWJsaXNoZWQiXSwibWV0cmljc19jb2xsZWN0aW9uX2ludGVydmFsIjo2MH0sIlRDUHY2Ijp7Im1lYXN1cmVtZW50IjpbIkNvbm5lY3Rpb25zIEVzdGFibGlzaGVkIl0sIm1ldHJpY3NfY29sbGVjdGlvbl9pbnRlcnZhbCI6NjB9LCJzdGF0c2QiOnsibWV0cmljc19hZ2dyZWdhdGlvbl9pbnRlcnZhbCI6NjAsIm1ldHJpY3NfY29sbGVjdGlvbl9pbnRlcnZhbCI6MTAsInNlcnZpY2VfYWRkcmVzcyI6Ijo4MTI1In19fSwibG9ncyI6eyJsb2dfc3RyZWFtX25hbWUiOiJsb2ctQ1dEZXRhaWxlZE1ldHJpY3MiLCJmb3JjZV9mbHVzaF9pbnRlcnZhbCI6OTAsImxvZ3NfY29sbGVjdGVkIjp7ImZpbGVzIjp7ImNvbGxlY3RfbGlzdCI6W3siZmlsZV9wYXRoIjoiYzpcXFByb2dyYW1EYXRhXFxBbWF6b25cXEFtYXpvbkNsb3VkV2F0Y2hBZ2VudFxcTG9nc1xcYW1hem9uLWNsb3Vkd2F0Y2gtYWdlbnQubG9nIiwibG9nX2dyb3VwX25hbWUiOiJhbWF6b24tY2xvdWR3YXRjaC1hZ2VudC5sb2ciLCJsb2dfc3RyZWFtX25hbWUiOiJsb2ctQ1dEZXRhaWxlZE1ldHJpY3Mte2luc3RhbmNlX2lkfS17aG9zdG5hbWV9LWN3YWdlbnQiLCJ0aW1lem9uZSI6IlVUQyIsInRpbWVzdGFtcF9mb3JtYXQiOiIlWS0lbS0lZFQlSDolTTolUy4lZiV6IiwiYXV0b19yZW1vdmFsIjp0cnVlLCJyZXRlbnRpb25faW5fZGF5cyI6MTgwfV19LCJ3aW5kb3dzX2V2ZW50cyI6eyJjb2xsZWN0X2xpc3QiOlt7ImV2ZW50X25hbWUiOiJTeXN0ZW0iLCJldmVudF9sZXZlbHMiOlsiSU5GT1JNQVRJT04iLCJFUlJPUiJdLCJsb2dfZ3JvdXBfbmFtZSI6IlN5c3RlbUV2ZW50cyIsImxvZ19zdHJlYW1fbmFtZSI6ImxvZy1DV0RldGFpbGVkTWV0cmljcy17aW5zdGFuY2VfaWR9LXtob3N0bmFtZX0tU3lzdGVtRXZlbnRzIiwiZXZlbnRfZm9ybWF0IjoieG1sIn0seyJldmVudF9uYW1lIjoiU2VjdXJpdHkiLCJldmVudF9sZXZlbHMiOlsiSU5GT1JNQVRJT04iLCJFUlJPUiJdLCJsb2dfZ3JvdXBfbmFtZSI6IlNlY3VyaXR5RXZlbnRzIiwibG9nX3N0cmVhbV9uYW1lIjoibG9nLUNXRGV0YWlsZWRNZXRyaWNzLXtpbnN0YW5jZV9pZH0te2hvc3RuYW1lfS1TZWN1cml0eUV2ZW50cyIsImV2ZW50X2Zvcm1hdCI6InhtbCJ9LHsiZXZlbnRfbmFtZSI6IkFwcGxpY2F0aW9uIiwiZXZlbnRfbGV2ZWxzIjpbIklORk9STUFUSU9OIiwiRVJST1IiXSwibG9nX2dyb3VwX25hbWUiOiJBcHBsaWNhdGlvbkV2ZW50cyIsImxvZ19zdHJlYW1fbmFtZSI6ImxvZy1DV0RldGFpbGVkTWV0cmljcy17aW5zdGFuY2VfaWR9LXtob3N0bmFtZX0tQXBwbGljYXRpb25FdmVudHMiLCJldmVudF9mb3JtYXQiOiJ4bWwifV19fX19"
mainSteps:
- action: aws:runShellScript
  name: Update Cloudwatch Config Linux
  precondition:
    StringEquals:
    - platformType
    - Linux
  runCommand:
  - "[ ! -f \"/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl\" ] && echo \"Cloudwatch not installed\" && exit 1"
  - reset_config=$(echo "{{ reset_config }}" | tr '[:upper:]' '[:lower:]')
  - "[ \"${reset_config}\" != \"true\" ] && reset_config=\"false\""
  - config_name=$(echo "{{ config_name }}.json" | tr '[:upper:]' '[:lower:]')
  - "[ $(ls /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.d/ | grep -ic \"\\.*\") -lt 1  ] && reset_config=\"true\""
  - tmp_dir=$(mktemp -d -t cloudwatch_config-XXXXXXXXXX)
  - config_file_path="${tmp_dir}/${config_name}"
  - echo "{{ LinuxCloudWatchConfig_base64 }}" | base64 --decode > $config_file_path
  - cloudwatch_config_filepath="/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.d/file_${config_name}"
  - "[ -f \"${cloudwatch_config_filepath}\" ] && [ \"$(cat $cloudwatch_config_filepath | base64 -w 0 )\" == \"$(cat $config_file_path | base64 -w 0  )\" ] && rm -Rf \"${tmp_dir}\" && echo \"Config Matches\" && exit 0"
  - "[ \"${reset_config}\" == \"true\"  ] && sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c \"file:${config_file_path}\""
  - "[ \"${reset_config}\" != \"true\"  ] && sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a append-config -m ec2 -s -c \"file:${config_file_path}\""
  - rm -Rf "${tmp_dir}"
  - echo "Configured"
- action: aws:runPowerShellScript
  name: Update Cloudwatch Config Windows
  precondition:
    StringEquals:
    - platformType
    - Windows
  runCommand:
  - if ( -not Test-Path -Path "C:\Program Files\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent-ctl.ps1" ) { throw "Cloudwatch not installed"; exit 1 }
  - $reset_config = $([System.Convert]::ToBoolean("{{ reset_config }}"))
  - $config_name = $("{{ config_name }}.json".ToLower())
  - if ( $(Get-ChildItem  $Env:ProgramData\Amazon\AmazonCloudWatchAgent\Configs\* | Measure-Object).Count -lt 1  ){ $reset_config = $TRUE }
  - $tmp_dir = Join-Path -Path "$([System.IO.Path]::GetTempPath())" -ChildPath "cloudwatch_$([System.IO.Path]::GetRandomFileName())"
  - $config_file_path = $(Join-Path -Path $tmp_dir -ChildPath $config_name)
  - New-Item -Path $tmp_dir -ItemType "directory" -ErrorAction SilentlyContinue
  - $([Text.Encoding]::UTF8.GetString([Convert]::FromBase64String("{{ WinuxCloudWatchConfig_base64 }}"))) | Out-File -FilePath $config_file_path
  - $cloudwatch_config_filepath = "$Env:ProgramData\Amazon\AmazonCloudWatchAgent\Configs\file_$($config_name)"
  - if ( Test-Path -Path "$Env:ProgramData\Amazon\AmazonCloudWatchAgent\Configs\file_$($config_name)" ) { if ( $(Get-FileHash $config_file_path -Algorithm "SHA256").Hash -eq (Get-FileHash $cloudwatch_config_filepath -Algorithm "SHA256").Hash  ){ Remove-Item -Recurse -Path "$tmp_dir\*"; Remove-Item -Recurse -Path "$tmp_dir"; write-host "Config Matches"; exit 0   } }
  - if ($reset_config) { & "C:\Program Files\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent-ctl.ps1" -a fetch-config -m ec2 -s -c "file:$($config_file_path)"  }
  - if (-not $reset_config) { & "C:\Program Files\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent-ctl.ps1" -a append-config -m ec2 -s -c "file:$($config_file_path)"  }
  - Remove-Item -Recurse -Path "$tmp_dir\*"
  - Remove-Item -Recurse -Path "$tmp_dir"
  - write-host "Configured"